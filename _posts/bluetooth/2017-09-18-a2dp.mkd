---
layout: post
title:  "Bluetooth 之 A2DP"
date:   2017-09-18
categories: [bluetooth]
header-img: "img/home-bg.jpg"
tags: Bluetooth
catalog: true
---

# 1. A2DP介绍
A2DP全名是Advanced Audio Distribution Profile 蓝牙音频传输协议 ，A2DP定义了ACL(Asynchronous Connectionless 异步无连接)信道上传送单声道或立体声等高质量音频信息的协议和过程 。 目前 A2DP 的最新版本为 1.3， 相关文档可以到 [bluetooth.org](https://www.bluetooth.com/zh-cn/specifications/bluetooth-core-specification/legacy-specifications) 查看。  

### 1.1 简介
+ Source (SRC) : 用于输出音频流
+ Sink (SNK) : 用于接收音频流  
![](/images/bluetooth/bluetooth_a2dp_role.png)  
目前手机上基本都实现了 SRC role , 另外在部分的手机代码中也有看到实现 SNK 但 default 并没有enable .   

A2DP协议基于 AVDTP (audio/video distribution transport protocol )， AVDTP则定义了蓝牙设备之间数据流句柄的参数协商，建立和传输过程以及相互交换的信令实体形式，该协议是A2DP框架的基础协议。  
![](/images/bluetooth/bt_a2dp_avdtp.png)  

### 1.2 一些限制
(1) 不支持同步的一对多传输    
(2) 在 Source 和 Sink 端的传输过程中要经过无线信号的传播， 数据buffer的传递 和 音频数据的编解码， 这样在SRC 和SNK 之间必然存在一定的延迟   
(3) 音频数据的传输速率必须小于蓝牙链接的速率， 另外还需留出余地给重传   
(4) A2DP 并不提供任何数据保护机制   

### 1.3 编码
A2DP 规定 SRC 和 SNC 必须支持 SBC 编码， 另外还有很多其他的编解码类型 (例如当前很多设备支持的 aptx) 由 vendor 来决定添加。  
![](/images/bluetooth/bt_a2dp_codec.png)  

### 1.4 SBC编码
在 AVDTP signaling 过程中， 会获取codec 的information ，其中SBC information 的相关格式数据结构为  :  
![](/images/bluetooth/bluetooth_a2dp_sbc_info.png)  

**Sampling Frequency**
SNK 必须至少支持 44100 和 48000 ， 而 SRC 必须至少支持两者之一
![](/images/bluetooth/bt_a2dp_sbc_sampling.png)  

**Channel Mode**
![](/images/bluetooth/bt_a2dp_sbc_channelmode.png)  
其他参数这里不再列出， 具体可以查询 A2DP Spec   

SBC 传输的帧结构如下 ， 右下角为 snoop log 截图    
![](/images/bluetooth/bt_a2dp_sbc_frame.png)  

### 1.5 通信过程
A2DP 基于AVDTP 连接之上， 先来看一下 AVDTP 中的两个重要概念   

**Stream End Point (SEP)** : 提供具体传输特定 AV capabilities 功能的服务 ， A2DP 中会根据不同的 codec 或者参数注册不同的 SEP   
**Stream End Point Identifier (SEID)**：标识Stream End Point的 ID   

AVDTP 中主要会建立两个 channel 连接 Signalling Channel 和 Media Transport Channel 
![](/images/bluetooth/bt_a2dp_avdtp_channel.png)  

AVDTP 完整的 Stream End-point Discovery to Stream Release过程：  
![](/images/bluetooth/bt_a2dp_signaling.png)  
其中会有5个状态的切换 ：  
![](/images/bluetooth/bt_a2dp_signaling_state.png)    
其主要流程有 :     
**Stream End Point Discovery** ：远端设备提供支持的SEP列表和media Type。  
**Get All Capabilities** ：通过SEID 获取SEP 的所有Capabilities   
**Stream Configuration** ：配置某个 SEP 的具体参数   
**Stream Establishment** ：opening of a transport session  
**Stream Start** ：在  transport session open 之后 , the Start Streaming procedure causes the streaming to start ; i.e., Media (Reporting, Recovery) packets can be exchanged  
**Stream Suspend** : 代表 stream suspend    
**Stream Reconfigure**：再次配置   
**Stream Release** : Stream release is initiated by the upper layer within a device; a signal is sent indicating that a stream end-point be closed.    

BT snoop log 实例 ：  
![](/images/bluetooth/bt_a2dp_signaling_snoop.png)   

# 2. Android A2DP

### 2.1 API
先来看一下 A2DP 相关的 API ， 代码路径在  frameworks/base/core/java/android/bluetooth/BluetoothA2dp.java 

**public方法**如下， 只能获取一些状态信息 ：  

```java
List<BluetoothDevice> getConnectedDevices()；
int getConnectionState(BluetoothDevice device)；
List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states)；
boolean isA2dpPlaying(BluetoothDevice device)；
```

**hide方法**如下， 可以操作连接断开及其他特性的设定 :  

```java
boolean connect(BluetoothDevice device)
boolean disconnect(BluetoothDevice device)
boolean setPriority(BluetoothDevice device, int priority)
int getPriority(BluetoothDevice device)
boolean isAvrcpAbsoluteVolumeSupported()
void adjustAvrcpAbsoluteVolume(int direction)
void setAvrcpAbsoluteVolume(int volume)
boolean shouldSendVolumeKeys(BluetoothDevice device)
static String stateToString(int state)
```

**Broadcast & State**

```java
    public static final String ACTION_CONNECTION_STATE_CHANGED =
        "android.bluetooth.a2dp.profile.action.CONNECTION_STATE_CHANGED";
        
    public static final String ACTION_PLAYING_STATE_CHANGED =
        "android.bluetooth.a2dp.profile.action.PLAYING_STATE_CHANGED";
        
    public static final int STATE_PLAYING   =  10;
    public static final int STATE_NOT_PLAYING   =  11;       
```

### 2.2 A2DP Service













 
